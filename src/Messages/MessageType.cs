// <auto-generated />

namespace Mumble.Messages
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;

    /// <summary>
    /// Enumeration of all Mumble protobuf message types
    /// </summary>
    [GeneratedCode("T4", "1.0")]
    internal enum MessageType
    {
        /// <summary>
        /// Version message type
        /// </summary>
        Version = 0,

        /// <summary>
        /// UDPTunnel message type
        /// </summary>
        UDPTunnel = 1,

        /// <summary>
        /// Authenticate message type
        /// </summary>
        Authenticate = 2,

        /// <summary>
        /// Ping message type
        /// </summary>
        Ping = 3,

        /// <summary>
        /// Reject message type
        /// </summary>
        Reject = 4,

        /// <summary>
        /// ServerSync message type
        /// </summary>
        ServerSync = 5,

        /// <summary>
        /// ChannelRemove message type
        /// </summary>
        ChannelRemove = 6,

        /// <summary>
        /// ChannelState message type
        /// </summary>
        ChannelState = 7,

        /// <summary>
        /// UserRemove message type
        /// </summary>
        UserRemove = 8,

        /// <summary>
        /// UserState message type
        /// </summary>
        UserState = 9,

        /// <summary>
        /// BanList message type
        /// </summary>
        BanList = 10,

        /// <summary>
        /// TextMessage message type
        /// </summary>
        TextMessage = 11,

        /// <summary>
        /// PermissionDenied message type
        /// </summary>
        PermissionDenied = 12,

        /// <summary>
        /// ACL message type
        /// </summary>
        ACL = 13,

        /// <summary>
        /// QueryUsers message type
        /// </summary>
        QueryUsers = 14,

        /// <summary>
        /// CryptSetup message type
        /// </summary>
        CryptSetup = 15,

        /// <summary>
        /// ContextActionModify message type
        /// </summary>
        ContextActionModify = 16,

        /// <summary>
        /// ContextAction message type
        /// </summary>
        ContextAction = 17,

        /// <summary>
        /// UserList message type
        /// </summary>
        UserList = 18,

        /// <summary>
        /// VoiceTarget message type
        /// </summary>
        VoiceTarget = 19,

        /// <summary>
        /// PermissionQuery message type
        /// </summary>
        PermissionQuery = 20,

        /// <summary>
        /// CodecVersion message type
        /// </summary>
        CodecVersion = 21,

        /// <summary>
        /// UserStats message type
        /// </summary>
        UserStats = 22,

        /// <summary>
        /// RequestBlob message type
        /// </summary>
        RequestBlob = 23,

        /// <summary>
        /// ServerConfig message type
        /// </summary>
        ServerConfig = 24,

        /// <summary>
        /// SuggestConfig message type
        /// </summary>
        SuggestConfig = 25,

    }

    public static partial class Messages
    {
        /// <summary>
        /// Mapping of message types to concrete types
        /// </summary>
        [GeneratedCode("T4", "1.0")]
        internal static Dictionary<MessageType, Type> Types = new Dictionary<MessageType, Type>
        {
            { MessageType.Version, typeof(Version) },
            { MessageType.UDPTunnel, typeof(UDPTunnel) },
            { MessageType.Authenticate, typeof(Authenticate) },
            { MessageType.Ping, typeof(Ping) },
            { MessageType.Reject, typeof(Reject) },
            { MessageType.ServerSync, typeof(ServerSync) },
            { MessageType.ChannelRemove, typeof(ChannelRemove) },
            { MessageType.ChannelState, typeof(ChannelState) },
            { MessageType.UserRemove, typeof(UserRemove) },
            { MessageType.UserState, typeof(UserState) },
            { MessageType.BanList, typeof(BanList) },
            { MessageType.TextMessage, typeof(TextMessage) },
            { MessageType.PermissionDenied, typeof(PermissionDenied) },
            { MessageType.ACL, typeof(ACL) },
            { MessageType.QueryUsers, typeof(QueryUsers) },
            { MessageType.CryptSetup, typeof(CryptSetup) },
            { MessageType.ContextActionModify, typeof(ContextActionModify) },
            { MessageType.ContextAction, typeof(ContextAction) },
            { MessageType.UserList, typeof(UserList) },
            { MessageType.VoiceTarget, typeof(VoiceTarget) },
            { MessageType.PermissionQuery, typeof(PermissionQuery) },
            { MessageType.CodecVersion, typeof(CodecVersion) },
            { MessageType.UserStats, typeof(UserStats) },
            { MessageType.RequestBlob, typeof(RequestBlob) },
            { MessageType.ServerConfig, typeof(ServerConfig) },
            { MessageType.SuggestConfig, typeof(SuggestConfig) },
        };
    }
}